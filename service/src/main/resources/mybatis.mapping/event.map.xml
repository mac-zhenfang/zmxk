<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EVENT">
	<!-- <resultMap type="com.smartool.common.dto.Event" id="event"> <id property="eventId" 
		column="eventId" /> <result property="eventTime" column="eventTime" /> <result 
		property="name" column="eventName" /> <result property="eventType" column="eventType" 
		/> <result property="eventTypeId" column="eventTypeId" /> <result property="quota" 
		column="quota" /> <result property="createdTime" column="createdTime" /> 
		<result property="lastModifiedTime" column="lastModifiedTime" /> <collection 
		property="attendees" ofType="com.smartool.common.dto.Attendee"> <id property="id" 
		column="attendeeId" /> <result property="userId" column="userId" /> </collection> 
		</resultMap> <select id="listAllWithAttendees" resultMap="event"> select 
		e.eventTime as eventTime, e.name as eventName, t.name as eventType, e.id 
		as eventId, t.id as eventTypeId, e.quota as quota, a.id as attendeeId, a.userId 
		as userId, e.createdTime as createdTime, e.lastModifiedTime as lastModifiedTime 
		from events e, eventTypes t, attendees a where e.eventTypeId=t.id and a.eventId 
		= e.id </select> -->
	<resultMap type="com.smartool.common.dto.Event" id="event">
		<id property="id" column="eventId" />
		<result property="eventTime" column="eventTime" />
		<result property="name" column="eventName" />
		<result property="siteId" column="siteId" />
		<result property="eventType" column="eventType" />
		<result property="eventTypeId" column="eventTypeId" />
		<result property="seriesId" column="seriesId" />
		<result property="stage" column="stage" />
		<result property="status" column="status" />
		<result property="quota" column="quota" />
		<result property="createdTime" column="createdTime" />
		<result property="lastModifiedTime" column="lastModifiedTime" />
		<collection property="attendees" ofType="com.smartool.common.dto.Attendee">
			<id property="id" column="attendeeId" />
			<result property="kidName" column="kidName" />
			<result property="eventId" column="eventId" />
			<result property="kidId" column="kidId" />
			<result property="userId" column="userId" />
			<result property="score" column="score" />
			<result property="rank" column="rank" />
			<result property="seq" column="seq" />
			<result property="status" column="status" />
		</collection>
	</resultMap>
	<select id="listAll" resultMap="event">
		select e.eventTime as eventTime,
		e.name as eventName, t.name as eventType, e.id as eventId, t.id as
		eventTypeId, e.quota as quota, e.siteId as siteId, e.createdTime as
		createdTime,
		e.lastModifiedTime as
		lastModifiedTime,
		a.id as attendeeId,
		a.score as score,
		a.rank as rank,
		a.userId as userId,
		a.seq as seq,
		e.status as status,
		e.stage as stage,
		e.seriesId as seriesId
		FROM events e JOIN eventTypes t LEFT JOIN (attendees a JOIN kids k)
		ON a.kidId = k.id and e.id = a.eventId and t.id = e.eventTypeId
	</select>
	
	<select id="listAllBySiteId" resultMap="event" parameterType="String">
		select e.eventTime as eventTime,
		e.name as eventName, t.name as eventType, e.id as eventId, t.id as
		eventTypeId, e.quota as quota, e.siteId as siteId, e.createdTime as
		createdTime,
		e.lastModifiedTime as
		lastModifiedTime,
		a.id as attendeeId,
		a.score as score,
		a.rank as rank,
		a.userId as userId,
		a.seq as seq,
		a.status as status,
		e.stage as stage,
		e.seriesId as seriesId
		FROM events e JOIN eventTypes t LEFT JOIN (attendees a JOIN kids k)
		ON a.kidId = k.id and e.id = a.eventId and t.id = e.eventTypeId
		WHERE e.siteId=#{siteId}
	</select>
	
	<select id="listAllStatus" parameterType="int" resultMap="event">
		select
		e.eventTime as eventTime,
		e.name as eventName, t.name as eventType,
		e.id as eventId, t.id as
		eventTypeId, e.quota as quota, e.siteId as
		siteId, e.createdTime as
		createdTime,
		e.lastModifiedTime as
		lastModifiedTime,
		a.id as attendeeId,
		a.score as score,
		a.rank as rank,
		a.userId as userId,
		a.seq as seq,
		a.status as status,
		e.stage as stage,
		e.seriesId as seriesId
		FROM events e JOIN eventTypes t LEFT JOIN (attendees a JOIN kids k)
		ON a.kidId = k.id and e.id = a.eventId and t.id = e.eventTypeId
		WHERE e.status = #{status};
	</select>

	<select id="remove" parameterType="String">
		delete from events where id =
		#{id}
	</select>

	<select id="listFullAll" resultMap="event">
		select e.eventTime as
		eventTime,
		e.name as eventName, t.name as eventType, e.id as eventId,
		t.id as
		eventTypeId, e.quota as quota, e.siteId as siteId,
		e.createdTime as
		createdTime,
		e.lastModifiedTime as
		lastModifiedTime,
		a.id as attendeeId,
		k.id as kidId,
		a.score as score,
		a.rank as rank,
		k.name as kidName,
		a.userId as userId,
		a.seq as seq,
		a.status as status,
		e.stage as stage,
		e.seriesId as seriesId
		FROM events e JOIN eventTypes t LEFT JOIN (attendees a JOIN kids k)
		ON a.kidId = k.id and e.id = a.eventId and t.id = e.eventTypeId
	</select>
	
	<select id="search" parameterType="Map" resultMap="event">
		SELECT events.eventTime as eventTime,
				events.name as eventName, eventTypes.name as eventType, events.id as eventId,
				eventTypes.id as eventTypeId, events.quota as quota, events.siteId as siteId,
				events.createdTime as createdTime,
				events.lastModifiedTime as lastModifiedTime,
				attendees.id as attendeeId,
				kids.id as kidId,
				attendees.score as score,
				attendees.rank as rank,
				kids.name as kidName,
				attendees.userId as userId,
				attendees.seq as seq,
				attendees.status as status,
				events.stage as stage,
				events.seriesId as seriesId
		FROM events JOIN eventTypes LEFT JOIN (attendees JOIN kids)
		ON attendees.kidId = kids.id and events.id = attendees.eventId and eventTypes.id = events.eventTypeId
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="status != null">
			AND e.status = #{status}
		</if>
		<if test="siteId != null">
			AND e.siteId=#{siteId}
		</if>
		<if test="seriesId != null">
			AND e.seriesId = #{seriesId}
		</if>
		</trim>
	</select>

	<select id="create" parameterType="com.smartool.common.dto.Event">
		insert events (id, name,
		eventTypeId,siteId, quota, stage, eventTime, seriesId, createdTime,lastModifiedTime)
		values
		(#{id},#{name},#{eventTypeId},#{siteId},#{quota},#{stage},#{eventTime},#{seriesId},now(),now())
	</select>


	<select id="getFullById" parameterType="String" resultMap="event">
		select
		e.eventTime as eventTime,
		e.name as eventName, t.name as
		eventType,
		e.id as eventId, t.id as
		eventTypeId, e.quota as quota,
		e.siteId as
		siteId, e.createdTime as
		createdTime,
		e.lastModifiedTime as
		lastModifiedTime,
		a.id as attendeeId,
		k.id as kidId,
		a.score as score,
		a.status as status,
		a.rank as rank,
		k.name as kidName,
		a.userId as
		userId,
		a.seq as seq,
		e.stage as stage,
		e.seriesId as seriesId
		FROM events e JOIN eventTypes t LEFT JOIN (attendees a JOIN kids k)
		ON a.kidId = k.id and e.id = a.eventId and t.id = e.eventTypeId
		WHERE e.id = #{id};
	</select>

	<select id="getById" parameterType="String"
		resultType="com.smartool.common.dto.Event">
		select * from events where id = #{id};
	</select>


	<select id="update" parameterType="com.smartool.common.dto.Event">
		update events
		set
		name=#{name},
		quota=#{quota},
		eventTypeId=#{eventTypeId},
		siteId=#{siteId},
		stage=#{stage},
		status=#{status},
		seriesId=#{seriesId},
		eventTime=#{eventTime}
		where id =
		#{id};
	</select>
</mapper>
