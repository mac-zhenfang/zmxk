<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ATTENDEE">
	<select id="create" parameterType="com.smartool.common.dto.Attendee">
		insert attendees (id, kidId,
		userId,eventId, tagId, seq, roundId, createdTime,lastModifiedTime)
		values
		(#{id},#{kidId},#{userId},#{eventId},#{tagId},#{seq},#{roundId},now(),now())
	</select>
	<select id="complete" parameterType="com.smartool.common.dto.Attendee">
		update attendees
		set
		rank=#{rank},
		seq=#{seq},
		score=#{score},
		tagId=#{tagId},
		roundId=#{roundId},
		status=#{status}
		where id =
		#{id};
	</select>
	<select id="updateNextRound" parameterType="com.smartool.common.dto.Attendee">
		update attendees set
		nextRoundId=#{nextRoundId} where id = #{id};
	</select>
	<select id="update" parameterType="com.smartool.common.dto.Attendee">
		update attendees
		set
		rank=#{rank},
		seq=#{seq},
		score=#{score},
		tagId=#{tagId},
		roundId=#{roundId},
		eventId=#{eventId},
		kidId=#{kidId},
		userId=#{userId},
		teamId=#{teamId},
		notify_times =
		#{attendeeNotifyTimes},
		status=#{status}
		where id =
		#{id};
	</select>
	<select id="updateNotifyTimes" parameterType="com.smartool.common.dto.Attendee">
		update attendees
		set
		notify_times=#{attendeeNotifyTimes}
		where id =
		#{id};
	</select>
	<select id="enroll" parameterType="com.smartool.common.dto.Attendee">
		update attendees set
		kidId=#{kidId}, userId=#{userId}, roundId = #{roundId}, status=#{status} where
		lastModifiedTime = #{lastModifiedTime} and status = 0 and id = #{id}
	</select>

	<select id="listAll" resultType="com.smartool.common.dto.Attendee">
		select a.id as
		id, a.kidId as
		kidId, a.createdTime as createdTime, a.lastModifiedTime
		as
		lastModifiedTime, a.status as status, a.score as score, a.tagId as
		tagId,a.roundId as roundId,
		a.seq as seq, a.nextRoundId as nextRoundId
		from attendees a
	</select>
	<select id="getById" parameterType="String"
		resultType="com.smartool.common.dto.Attendee">
		select * from attendees where id = #{id}
	</select>

	<select id="getByEventId" parameterType="String"
		resultType="com.smartool.common.dto.Attendee">
		select * from attendees where eventId = #{eventId} and
		status > 0
	</select>
	<select id="getByEventRoundId" parameterType="Map"
		resultType="com.smartool.common.dto.Attendee">
		select * from attendees where eventId = #{eventId}
		<if test="roundId != null">
			and roundId=#{roundId}
		</if>
		and status = 2
	</select>
	<select id="getPendingAttendees" parameterType="String"
		resultType="com.smartool.common.dto.Attendee">
		select a.id as
		id, a.kidId as kidId, a.createdTime as
		createdTime, a.lastModifiedTime
		as lastModifiedTime, a.status as
		status, a.score as score, a.seq as seq, a.tagId as tagId, a.roundId as
		roundId from attendees a where
		a.eventId = #{eventId} and
		a.status = 0
	</select>
	<select id="listRoundsByLevelName" parameterType="Map"
		resultType="com.smartool.common.dto.Attendee" flushCache="true" useCache="false">
		select * from attendees a LEFT JOIN rounds r on
		a.roundId=r.id where r.level = #{level} and r.shortName=#{shortName} and
		a.eventId=#{eventId}
	</select>
	<delete id="removeUnused" parameterType="String">
		delete from attendees
		where kidId IS NULL and eventId = #{eventId}
	</delete>
</mapper>
